from typing import List

from saas.sdk.base import SDKContext

from explorer.module.base import BuildModule
from explorer.project import Project
from explorer.schemas import BuildModuleSpecification


class BuildingEnergyEfficiencyModule(BuildModule):
    # NOTE: the parameters are hardcoded here instead of being provided in form of data objects as is the case with
    # other build modules. the rationale here is that the BEM profile are indeed parameters which are specific to
    # the model (the mWRF-SG model to be precise). on the other hand, AH data for example, is output that is being
    # generated by an analysis (i.e., by running a simulation using an AH emission model). in other words: the BEM
    # parameters never change unless changed by the developers/modelers. the AH data can be user-generated.
    profiles = [
        {
            'name': 'default',
            'title': 'Current (as of 2016)',
            'description': 'Buildings have a performance similar to the average buildings in Singapore (as of 2016). '
                           'Compact high-rise areas are assumed to be commercial, while the others are treated as '
                           'residential.',
            'parameters': {
                'AKSR': '0.30, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33',
                'AKSB': '0.0625, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25',
                'ALBR': '0.4, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6',
                'ALBB': '0.4, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7',
                'ALBG': '0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2',
                'COP': '3, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5',
                'COOLED_FRC': '0.85, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0',
                'PWIN': '0.6, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4',
                'TIME_ON': '0, 23, 23, 23, 23, 23, 23, 23, 23, 4',
                'TIME_OFF': '24, 7, 7, 7, 7, 7, 7, 7, 7, 5',
                'TARGTEMP': '297.15, 297.15, 297.15, 297.15, 297.15, 297.15, 297.15, 297.15, 297.15, 320.15',
                'PERFLO': '0.05, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025',
                'HSEQUIP_SCALE_FACTOR': '22, 8, 8, 8, 8, 8, 8, 8, 8, 8',
                'BLDAC_FRC': '1, 1, 1, 1, 1, 1, 1, 1, 1, 0'
            }
        },
        {
            'name': 'cooling-off',
            'title': 'No A/C Usage',
            'description': 'Air-conditioning of all buildings is turned off. This means buildings do not cause '
                           'anthropogenic heat emissions (i.e., buildings are \'passive\').',
            'parameters': {
                'AH': '0, 0, 0, 0, 0, 0, 0, 0, 0, 0',
                'AKSR': '0.30, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33',
                'AKSB': '0.0625, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25',
                'ALBR': '0.4, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6',
                'ALBB': '0.4, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7',
                'ALBG': '0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2',
                'COP': '3, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5',
                'COOLED_FRC': '0, 0, 0, 0, 0, 0, 0, 0, 0, 0',
                'PWIN': '0.6, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4',
                'TIME_ON': '4, 4, 4, 4, 4, 4, 4, 4, 4, 4',
                'TIME_OFF': '5, 5, 5, 5, 5, 5, 5, 5, 5, 5',
                'TARGTEMP': '320.15, 320.15, 320.15, 320.15, 320.15, 320.15, 320.15, 320.15, 320.15, 320.15',
                'PERFLO': '0.05, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025',
                'HSEQUIP_SCALE_FACTOR': '22, 8, 8, 8, 8, 8, 8, 8, 8, 8',
                'BLDAC_FRC': '1, 1, 1, 1, 1, 1, 1, 1, 1, 0'
            }
        },
        # {
        #     'name': 'green-roof',
        #     'title': 'Green Roof',
        #     'description': 'Buildings have a performance similar to the average reported buildings in Singapore, but '
        #                    'all roof spaces are replaced with green roofs. Compact high-rise areas are assumed to be '
        #                    'commercial, while the others are treated as residential.',
        #     'parameters': {
        #         'AKSR': '0.30, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33',
        #         'AKSB': '0.0625, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25',
        #         'ALBR': '0.4, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6',
        #         'ALBB': '0.4, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7',
        #         'ALBG': '0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2',
        #         'COP': '3, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5',
        #         'COOLED_FRC': '0.85, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0',
        #         'PWIN': '0.6, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4',
        #         'TIME_ON': '0, 23, 23, 23, 23, 23, 23, 23, 23, 4',
        #         'TIME_OFF': '24, 7, 7, 7, 7, 7, 7, 7, 7, 5',
        #         'TARGTEMP': '297.15, 297.15, 297.15, 297.15, 297.15, 297.15, 297.15, 297.15, 297.15, 320.15',
        #         'PERFLO': '0.05, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025',
        #         'HSEQUIP_SCALE_FACTOR': '22, 8, 8, 8, 8, 8, 8, 8, 8, 8',
        #         'BLDAC_FRC': '1, 1, 1, 1, 1, 1, 1, 1, 1, 0',
        #         'GR_FLAG': '1',
        #         'GR_TYPE': '1',
        #         'GR_FRAC_ROOF': '1, 1, 1, 1, 1, 1, 1, 1, 1, 1',
        #         'IRI_SCHEME': '0',
        #         'GROPTION': '1',
        #         'FGR': '1',
        #         'DZGR': '0.05, 0.05, 0.05, 0.05',
        #     }
        # },
        {
            'name': 'high-efficiency-1',
            'title': 'High Efficiency 1 (10%-20%)',
            'description': 'Overall building efficiency is increased by 10%-20% compared to the current situation '
                           '(as of 2016). This is achieved by assuming higher A/C temperature set-point and more '
                           'efficient cooling systems and appliances.',
            'parameters': {
                'AKSR': '0.30, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33',
                'AKSB': '0.0625, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25',
                'ALBR': '0.4, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6',
                'ALBB': '0.4, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7',
                'ALBG': '0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2',
                'COP': '3.5, 3, 3, 3, 3, 3, 3, 3, 3, 3',
                'COOLED_FRC': '0.85, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0',
                'PWIN': '0.6, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4',
                'TIME_ON': '0, 23, 23, 23, 23, 23, 23, 23, 23, 4',
                'TIME_OFF': '24, 7, 7, 7, 7, 7, 7, 7, 7, 5',
                'TARGTEMP': '298.15, 298.15, 298.15, 298.15, 298.15, 298.15, 298.15, 298.15, 298.15, 320.15',
                'PERFLO': '0.05, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025',
                'HSEQUIP_SCALE_FACTOR': '19, 7, 7, 7, 7, 7, 7, 7, 7, 7',
                'BLDAC_FRC': '1, 1, 1, 1, 1, 1, 1, 1, 1, 0'
            }
        },
        {
            'name': 'high-efficiency-2',
            'title': 'High Efficiency 2 (50%-60%)',
            'description': 'Overall building efficiency is increased by 50%-60% compared to the current situation '
                           '(as of 2016). This is achieved by assuming more efficient facade materials, higher A/C '
                           'temperature set-point, and more efficient cooling systems and appliances.',
            'parameters': {
                'AKSR': '0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33, 0.33',
                'AKSB': '0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25',
                'ALBR': '0.3, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6',
                'ALBB': '0.3, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7',
                'ALBG': '0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2',
                'COP': '4, 4, 4, 4, 4, 4, 4, 4, 4, 4',
                'COOLED_FRC': '0.75, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0',
                'PWIN': '0.45, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35, 0.35',
                'TIME_ON': '6, 23, 23, 23, 23, 23, 23, 23, 23, 4',
                'TIME_OFF': '22, 7, 7, 7, 7, 7, 7, 7, 7, 5',
                'TARGTEMP': '298.15, 298.15, 298.15, 298.15, 298.15, 298.15, 298.15, 298.15, 298.15, 298.15',
                'PERFLO': '0.04, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02',
                'HSEQUIP_SCALE_FACTOR': '11, 3, 3, 3, 3, 3, 3, 3, 3, 3',
                'BLDAC_FRC': '1, 1, 1, 1, 1, 1, 1, 1, 1, 0'
            }
        }
    ]

    def name(self) -> str:
        return 'building-energy-efficiency'

    def label(self) -> str:
        return 'Citywide Building Energy'

    def type(self) -> str:
        return 'meso'

    def specification(self, project: Project) -> BuildModuleSpecification:
        return BuildModuleSpecification.parse_obj({
            'name': self.name(),
            'label': self.label(),
            'type': self.type(),
            'priority': 105,
            'description': 'Select a pre-defined option to make a global change to the overall building efficiency '
                           'for all the buildings in the city.',
            'parameters_schema': {
                'type': 'object',
                'properties': {
                    'profile': {
                        'title': 'Profile',
                        'type': 'boolean',
                        'default': 'default',
                        'defaultValue': 'default',
                        'oneOf': [{
                            'title': p['title'],
                            'const': p['name'],
                            'description': p['description']
                        } for p in self.profiles]
                    }
                },
                'required': ['profile']
            },
            'has_raster_map': False,
            'has_update_map': False,
            'has_area_selector': False,
            'hide_settings_accordion': False,
            'editable': False,
            'editorConfig': {},
            'ui_schema': {
                "profile": {
                    "ui:widget": "radioDescWidget"
                }
            },
            'icon': 'energy_efficiency.svg'
        })

    def raster_image(self, project: Project, parameters: dict, sdk: SDKContext) -> List[dict]:
        return []

    def chart(self, project: Project, parameters: dict, sdk: SDKContext) -> dict:
        return {}
